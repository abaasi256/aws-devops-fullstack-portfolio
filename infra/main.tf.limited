# Modified main.tf for limited permissions

# Configure AWS Provider
provider "aws" {
  region = var.aws_region
  
  default_tags {
    tags = {
      Project     = var.project_name
      Environment = var.environment
      ManagedBy   = "Terraform"
    }
  }
}

# Networking Module
module "networking" {
  source = "./modules/networking"

  project_name        = var.project_name
  vpc_cidr            = var.vpc_cidr
  public_subnet_cidrs = var.public_subnet_cidrs
  private_subnet_cidrs = var.private_subnet_cidrs
  availability_zones  = var.availability_zones
}

# Security Module
module "security" {
  source = "./modules/security"

  project_name          = var.project_name
  vpc_id                = module.networking.vpc_id
  ssh_allowed_cidrs     = var.ssh_allowed_cidrs
  deployment_bucket_name = "${var.project_name}-deployment-${var.environment}"  # Reference name only, don't create bucket
}

# Database Module - Comment out if you don't have RDS permissions
# module "database" {
#   source = "./modules/database"
#
#   project_name        = var.project_name
#   private_subnet_ids  = module.networking.private_subnet_ids
#   availability_zones  = var.availability_zones
#   rds_security_group_id = module.security.rds_security_group_id
#   database_name       = var.database_name
#   master_username     = var.db_master_username
#   master_password     = var.db_master_password
#   engine_version      = var.db_engine_version
#   db_instance_class   = var.db_instance_class
#   db_instance_count   = var.db_instance_count
# }

# Compute Module - Simplified version
module "compute" {
  source = "./modules/compute"

  project_name           = var.project_name
  vpc_id                 = module.networking.vpc_id
  public_subnet_ids      = module.networking.public_subnet_ids
  private_subnet_ids     = module.networking.private_subnet_ids
  alb_security_group_id  = module.security.alb_security_group_id
  ec2_security_group_id  = module.security.ec2_security_group_id
  ec2_instance_profile_name = module.security.ec2_instance_profile_name
  ami_id                 = var.ami_id
  instance_type          = var.instance_type
  asg_min_size           = var.asg_min_size
  asg_max_size           = var.asg_max_size
  asg_desired_capacity   = var.asg_desired_capacity
  acm_certificate_arn    = "arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012"  # Dummy ARN
  create_dns_record      = false  # Disable Route53 record creation
  route53_zone_id        = var.route53_zone_id
  domain_name            = var.domain_name
}

# Comment out monitoring module if you don't have CloudWatch/SNS permissions
# module "monitoring" {
#   source = "./modules/monitoring"
#
#   project_name         = var.project_name
#   aws_region           = var.aws_region
#   log_retention_days   = var.log_retention_days
#   autoscaling_group_name = module.compute.autoscaling_group_name
#   db_cluster_identifier = "dummy-cluster-id"  # Dummy ID since database module is commented out
#   alb_arn_suffix       = split("/", module.compute.alb_arn)[1]
#   alarm_email          = var.alarm_email
# }

# Output key information
output "vpc_id" {
  description = "ID of the VPC"
  value       = module.networking.vpc_id
}

output "public_subnet_ids" {
  description = "IDs of the public subnets"
  value       = module.networking.public_subnet_ids
}

output "private_subnet_ids" {
  description = "IDs of the private subnets"
  value       = module.networking.private_subnet_ids
}

output "alb_dns_name" {
  description = "DNS name of the ALB"
  value       = module.compute.alb_dns_name
}
